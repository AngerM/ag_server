plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.0'
    id "org.jetbrains.dokka" version "$dokkaVersion"
    id "org.jmailen.kotlinter" version "3.4.4"
    id "com.github.ben-manes.versions" version "0.38.0"
}

allprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: "org.jetbrains.dokka"
    apply plugin: "org.jmailen.kotlinter"

    repositories {
        mavenCentral()
    }

    sourceCompatibility = 11
    targetCompatibility = 11

  dependencies {
      implementation platform('org.jetbrains.kotlin:kotlin-bom')
      api 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
      [ 'kotlinx-coroutines-core',
        'kotlinx-coroutines-reactor',
        'kotlinx-coroutines-jdk8',
        'kotlinx-coroutines-slf4j',
      ].each {
        api "org.jetbrains.kotlinx:${it}:1.4.3"
      }


      api platform("com.linecorp.armeria:armeria-bom:1.7.2")
      ['armeria',
       'armeria-kotlin',
       'armeria-logback',
       'armeria-retrofit2',
       'armeria-rxjava3',
      ].each {
        api "com.linecorp.armeria:${it}"
      }
      api 'io.github.microutils:kotlin-logging-jvm:2.0.6'
      api 'com.uchuhimo:konf:1.1.2'

      ['simpleclient',
      'simpleclient_hotspot',
      'simpleclient_httpserver',
      ].each {
        api "io.prometheus:${it}:0.10.0"
      }

      api "com.google.inject:guice:5.0.1"

      testImplementation 'org.jetbrains.kotlin:kotlin-test'
      testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

      dokkaHtmlPlugin "org.jetbrains.dokka:kotlin-as-java-plugin:$dokkaVersion"
  }

    tasks.withType(JavaCompile) {
        options.compilerArgs += '-parameters'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
}

def isNonStable = { String version ->
  def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
  def regex = /^[0-9,.v-]+(-r)?$/
  return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
  rejectVersionIf {
    isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}

check {
    dependsOn "installKotlinterPrePushHook"
}
